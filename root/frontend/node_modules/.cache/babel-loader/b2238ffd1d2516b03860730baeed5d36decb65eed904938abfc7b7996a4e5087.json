{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nconst ApiService = () => {\n  _s();\n  const [yes, setYes] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        fetch('http://localhost:5000', {\n          method: 'GET',\n          credentials: 'include'\n        }).then(response => {\n          if (!response.ok) {\n            console.log(\"There is no data\");\n          }\n          return response.json();\n        }).then(data => {\n          console.log(data);\n          setYes(data);\n        });\n      } catch (error) {\n        console.error('cant get data after search & login', error);\n      }\n    };\n  });\n};\n_s(ApiService, \"hMo3wI6KvuBE+yVWlpqD/lZbkoU=\");\n_c = ApiService;\nexport default ApiService;\nvar _c;\n$RefreshReg$(_c, \"ApiService\");","map":{"version":3,"names":["React","useEffect","useState","ApiService","_s","yes","setYes","fetchData","fetch","method","credentials","then","response","ok","console","log","json","data","error","_c","$RefreshReg$"],"sources":["/Users/pranit/CS411/root/frontend/src/components/apiService.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\n\nconst ApiService = () => {\n\n    const [yes, setYes] = useState();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                fetch('http://localhost:5000', {\n                        method: 'GET',\n                        credentials: 'include',\n                      }).then((response) => {\n                        if (!response.ok){\n                            console.log(\"There is no data\")\n                        }\n                        return response.json();\n                      })\n                      .then((data) => {\n                        console.log(data)\n                        setYes(data)\n                      })\n\n            } catch (error) {\n                console.error('cant get data after search & login', error);\n              }\n        \n    }\n    })\n\n    \n\n\n   \n  \n}\n\n\nexport default ApiService\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAGhD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGJ,QAAQ,CAAC,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACZ,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACAC,KAAK,CAAC,uBAAuB,EAAE;UACvBC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;UACpB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAC;YACbC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;UACnC;UACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;UACdH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;UACjBX,MAAM,CAACW,IAAI,CAAC;QACd,CAAC,CAAC;MAEZ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZJ,OAAO,CAACI,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IAEV,CAAC;EACD,CAAC,CAAC;AAON,CAAC;AAAAd,EAAA,CAjCKD,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AAoChB,eAAeA,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}