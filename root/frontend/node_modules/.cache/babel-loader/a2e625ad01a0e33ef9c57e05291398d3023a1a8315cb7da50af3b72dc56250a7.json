{"ast":null,"code":"var _jsxFileName = \"/Users/ariontripathi/CS411/Travel-Planner-Project/root/frontend/src/components/homepage.js\",\n  _s = $RefreshSig$();\nimport ApiService from './apiService';\nimport './homepage.css';\nimport NavBar from './navbar';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const validateInput = input => {\n    // Split the input by commas and check if all required parts (city, state, country) are present\n    const parts = input.split(',');\n    if (parts.length === 3 && parts[0] && parts[1] && parts[2]) {\n      return true;\n    } else {\n      alert('Please enter a valid format: City,State Code,Country Code');\n      return false;\n    }\n  };\n  const handleKeyDown = async event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      await handleSearch();\n    }\n  };\n  const handleButtonClick = async () => {\n    await handleSearch();\n  };\n  const handleSearch = async () => {\n    if (!validateInput(input)) {\n      setInput(''); // Clear input for re-entry\n      return; // Stop further execution if validation fails\n    }\n    try {\n      const response = await fetch('http://localhost:5000/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          searchQuery: input\n        })\n      });\n      const data = await response.json();\n      console.log(\"Response from the frontend\", data);\n      setInput(''); // Clear input after successful search\n    } catch (err) {\n      console.error(\"Error in user input:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"white-text\",\n        children: \"Enjoy Vacation. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blue-text\",\n        children: \" Rain or Shine.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"text-input\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Enter a city or zipcode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-button\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/events\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search\",\n          onClick: handleButtonClick,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["ApiService","NavBar","React","useState","Link","jsxDEV","_jsxDEV","HomePage","_s","input","setInput","validateInput","parts","split","length","alert","handleKeyDown","event","key","preventDefault","handleSearch","handleButtonClick","response","fetch","method","headers","body","JSON","stringify","searchQuery","data","json","console","log","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","e","target","onKeyDown","placeholder","to","onClick","_c","$RefreshReg$"],"sources":["/Users/ariontripathi/CS411/Travel-Planner-Project/root/frontend/src/components/homepage.js"],"sourcesContent":["import ApiService from './apiService';\nimport './homepage.css'\nimport NavBar from './navbar'\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction HomePage() {\n    const [input, setInput] = useState(\"\");\n\n    const validateInput = (input) => {\n        // Split the input by commas and check if all required parts (city, state, country) are present\n        const parts = input.split(',');\n        if (parts.length === 3 && parts[0] && parts[1] && parts[2]) {\n            return true;\n        } else {\n            alert('Please enter a valid format: City,State Code,Country Code');\n            return false;\n        }\n    };\n\n    const handleKeyDown = async (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            await handleSearch();\n        }\n    };\n\n    const handleButtonClick = async () => {\n        await handleSearch();\n    };\n\n    const handleSearch = async () => {\n        if (!validateInput(input)) {\n            setInput(''); // Clear input for re-entry\n            return; // Stop further execution if validation fails\n        }\n\n        try {\n            const response = await fetch('http://localhost:5000/search', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ searchQuery: input }),\n            });\n            const data = await response.json();\n            console.log(\"Response from the frontend\", data);\n            setInput(''); // Clear input after successful search\n        } catch (err) {\n            console.error(\"Error in user input:\", err);\n        }\n    };\n\n    return (\n        <div className=\"background-container\">\n            <NavBar />\n            <h1>\n                <span className=\"white-text\">Enjoy Vacation. </span>\n                <span className=\"blue-text\"> Rain or Shine.</span>\n            </h1>\n\n            <div id=\"text-input\">\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={e => setInput(e.target.value)}\n                    onKeyDown={handleKeyDown}\n                    placeholder=\"Enter a city or zipcode\"\n                />\n            </div>\n\n            <div className=\"search-button\">\n                <Link to=\"/events\">\n                    <button className=\"search\" onClick={handleButtonClick}>Search</button>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}