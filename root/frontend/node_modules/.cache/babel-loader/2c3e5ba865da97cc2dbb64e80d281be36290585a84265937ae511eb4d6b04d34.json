{"ast":null,"code":"var _jsxFileName = \"/Users/pranit/CS411/root/frontend/src/components/apiService.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiService = () => {\n  _s();\n  const [businesses, setBusinesses] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/search', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            searchQuery: input\n          })\n        });\n        const data = await response.json();\n        console.log(\"this is from the apiService\", data);\n        setInput('');\n      } catch (err) {\n        console.error(\"Error in user input:\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text\",\n    children: businesses ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(businesses)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiService, \"4MnSV0/T0Njmu05nkmQvABFlP80=\");\n_c = ApiService;\nexport default ApiService;\nvar _c;\n$RefreshReg$(_c, \"ApiService\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ApiService","_s","businesses","setBusinesses","fetchData","response","fetch","method","headers","body","JSON","stringify","searchQuery","input","data","json","console","log","setInput","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pranit/CS411/root/frontend/src/components/apiService.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst ApiService = () => {\n  const [businesses, setBusinesses] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/search', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({searchQuery: input}),\n        });\n        const data = await response.json();\n        console.log(\"this is from the apiService\", data);\n        setInput('')\n      } catch (err){\n        console.error(\"Error in user input:\", err);\n      }\n    };\n\n    fetchData();\n  }, []); \n\n  return (\n    <div className='text'>\n      {businesses ? (\n        <div>{JSON.stringify(businesses)}</div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default ApiService;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;UAC3DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAACC,WAAW,EAAEC;UAAK,CAAC;QAC3C,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,IAAI,CAAC;QAChDI,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,CAAC,OAAOC,GAAG,EAAC;QACXH,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAAC;MAC5C;IACF,CAAC;IAEDf,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBpB,UAAU,gBACTH,OAAA;MAAAuB,QAAA,EAAMZ,IAAI,CAACC,SAAS,CAACT,UAAU;IAAC;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEvC3B,OAAA;MAAAuB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACrB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAjCID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}