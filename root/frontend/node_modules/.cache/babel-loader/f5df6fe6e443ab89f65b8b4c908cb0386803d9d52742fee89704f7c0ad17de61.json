{"ast":null,"code":"var _jsxFileName = \"/Users/evaromero/Desktop/TravelBuddy/Travel-Planner-Project/root/frontend/src/components/events.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react'; // Correct import of hooks\nimport NavBar from './navbar'; // Import NavBar component\n\n// Combined ApiService and Events component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  _s();\n  const [businesses, setBusinesses] = useState(null); // State to hold fetched data\n  const [isLoading, setIsLoading] = useState(true); // State to track loading status\n\n  // Effect to fetch data when component mounts\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/search'); // Fetch data\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json(); // Parse JSON data\n        setBusinesses(data); // Update state with fetched data\n        setIsLoading(false); // Indicate data fetching is complete\n      } catch (error) {\n        console.error('Error fetching data: ', error); // Handle errors\n      }\n    };\n    fetchData(); // Fetch data when the component mounts\n  }, []); // Dependency array to ensure effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), \"  // Display the navigation bar\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isLoading ?\n    /*#__PURE__*/\n    // Conditional rendering based on loading status\n    _jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) // Display while loading\n    : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\"  // Display the fetched businesses\", businesses && businesses.businesses.map((business, index) =>\n      /*#__PURE__*/\n      // Check if data is loaded and map over it\n      _jsxDEV(\"li\", {\n        children: business\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this) // Display business names\n      )]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Events, \"W+WmQcllRUekZWr8if44NFdlRNY=\");\n_c = Events;\nexport default Events; // Export the combined component\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useEffect","useState","NavBar","jsxDEV","_jsxDEV","Events","_s","businesses","setBusinesses","isLoading","setIsLoading","fetchData","response","fetch","ok","Error","status","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","business","index","_c","$RefreshReg$"],"sources":["/Users/evaromero/Desktop/TravelBuddy/Travel-Planner-Project/root/frontend/src/components/events.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';  // Correct import of hooks\nimport NavBar from './navbar';  // Import NavBar component\n\n// Combined ApiService and Events component\nconst Events = () => {\n  const [businesses, setBusinesses] = useState(null);  // State to hold fetched data\n  const [isLoading, setIsLoading] = useState(true);   // State to track loading status\n\n  // Effect to fetch data when component mounts\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/search');  // Fetch data\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();  // Parse JSON data\n        setBusinesses(data);  // Update state with fetched data\n        setIsLoading(false);  // Indicate data fetching is complete\n      } catch (error) {\n        console.error('Error fetching data: ', error);  // Handle errors\n      }\n    };\n\n    fetchData();  // Fetch data when the component mounts\n  }, []);  // Dependency array to ensure effect runs once on mount\n\n  return (\n    <div>\n      <NavBar />  // Display the navigation bar\n      <h1>Events</h1>\n      {isLoading ? (  // Conditional rendering based on loading status\n        <p>Loading...</p>  // Display while loading\n      ) : (\n        <ul>  // Display the fetched businesses\n          {businesses && businesses.businesses.map((business, index) => (  // Check if data is loaded and map over it\n            <li key={index}>{business}</li>  // Display business names\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Events;  // Export the combined component\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO,CAAC,CAAE;AACrD,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAE;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACrD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAG;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAE;QAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAE;QACrCV,aAAa,CAACS,IAAI,CAAC,CAAC,CAAE;QACtBP,YAAY,CAAC,KAAK,CAAC,CAAC,CAAE;MACxB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC,CAAE;MAClD;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC,CAAC,CAAE;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACEP,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACF,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,mCACV,eAAArB,OAAA;MAAAiB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdhB,SAAS;IAAA;IAAM;IACdL,OAAA;MAAAiB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAE;IAAA,eAEnBrB,OAAA;MAAAiB,QAAA,GAAI,qCACF,EAACd,UAAU,IAAIA,UAAU,CAACA,UAAU,CAACmB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK;MAAA;MAAQ;MAC/DxB,OAAA;QAAAiB,QAAA,EAAiBM;MAAQ,GAAhBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC,CAAE;MAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCID,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAwCZ,eAAeA,MAAM,CAAC,CAAE;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}