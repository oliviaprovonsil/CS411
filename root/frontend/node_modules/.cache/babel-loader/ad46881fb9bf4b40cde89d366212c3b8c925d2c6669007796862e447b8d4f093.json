{"ast":null,"code":"var _jsxFileName = \"/Users/pranit/CS411/root/frontend/src/components/apiService.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiService = () => {\n  _s();\n  const [yes, setYes] = useState(null);\n  const fetchData = async () => {\n    try {\n      fetch('http://localhost:5000', {\n        method: 'GET',\n        credentials: 'include'\n      }).then(response => {\n        if (!response.ok) {\n          console.log(\"There is no data\");\n        }\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        setYes(data);\n      });\n    } catch (error) {\n      console.error('cant get data after search & login', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text\",\n    children: yes ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(yes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(ApiService, \"LY4Rz3JU8GcQ7Mhkg0WRNmpXwV8=\");\n_c = ApiService;\nexport default ApiService;\nvar _c;\n$RefreshReg$(_c, \"ApiService\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ApiService","_s","yes","setYes","fetchData","fetch","method","credentials","then","response","ok","console","log","json","data","error","className","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pranit/CS411/root/frontend/src/components/apiService.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\n\nconst ApiService = () => {\n\n    const [yes, setYes] = useState(null);\n\n        const fetchData = async () => {\n            try {\n                fetch('http://localhost:5000', {\n                        method: 'GET',\n                        credentials: 'include',\n                      }).then((response) => {\n                        if (!response.ok){\n                            console.log(\"There is no data\")\n                        }\n                        return response.json();\n                      })\n                      .then((data) => {\n                        console.log(data)\n                        setYes(data)\n                      })\n\n            } catch (error) {\n                console.error('cant get data after search & login', error);\n              }\n        \n    }\n\n    return (\n      <div className='text'>\n        {yes ? (\n          <div>{JSON.stringify(yes)}</div>\n        ) : (\n          <div>Loading...</div>\n        )}\n      </div>\n    );\n\n    \n\n\n   \n  \n}\n\n\nexport default ApiService\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEhC,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACAC,KAAK,CAAC,uBAAuB,EAAE;QACvBC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACf,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QACpB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAC;UACbC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QACnC;QACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;QACdH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;QACjBX,MAAM,CAACW,IAAI,CAAC;MACd,CAAC,CAAC;IAEZ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EAEV,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBf,GAAG,gBACFH,OAAA;MAAAkB,QAAA,EAAMC,IAAI,CAACC,SAAS,CAACjB,GAAG;IAAC;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEhCxB,OAAA;MAAAkB,QAAA,EAAK;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACrB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAQZ,CAAC;AAAAtB,EAAA,CAzCKD,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA4ChB,eAAeA,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}