{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nconst ApiService = () => {\n  _s();\n  const [businesses, setBusinesses] = useState(null); // Store fetched businesses data\n  const fetchData = async () => {\n    // Separate function for fetching data\n    try {\n      const response = await fetch('http://localhost:5000/'); // Call the endpoint\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json(); // Parse the JSON response\n      setBusinesses(data.businesses); // Set the businesses data\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData(); // Fetch data on component mount\n  }, []); // Empty dependency array to ensure this runs once on mount\n\n  return businesses; // Return the fetched businesses\n};\n_s(ApiService, \"4MnSV0/T0Njmu05nkmQvABFlP80=\");\n_c = ApiService;\nexport default ApiService;\nvar _c;\n$RefreshReg$(_c, \"ApiService\");","map":{"version":3,"names":["React","useEffect","useState","ApiService","_s","businesses","setBusinesses","fetchData","response","fetch","ok","Error","status","data","json","error","console","_c","$RefreshReg$"],"sources":["/Users/evaromero/Desktop/TravelBuddy/Travel-Planner-Project/root/frontend/src/components/apiService.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst ApiService = () => {\n  const [businesses, setBusinesses] = useState(null);  // Store fetched businesses data\n  const fetchData = async () => {  // Separate function for fetching data\n    try {\n      const response = await fetch('http://localhost:5000/');  // Call the endpoint\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();  // Parse the JSON response\n      setBusinesses(data.businesses);  // Set the businesses data\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();  // Fetch data on component mount\n  }, []);  // Empty dependency array to ensure this runs once on mount\n\n  return businesses;  // Return the fetched businesses\n};\n\nexport default ApiService;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACrD,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;IAAG;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAE;MACzD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAE;MACrCR,aAAa,CAACO,IAAI,CAACR,UAAU,CAAC,CAAC,CAAE;IACnC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdM,SAAS,CAAC,CAAC,CAAC,CAAE;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,OAAOF,UAAU,CAAC,CAAE;AACtB,CAAC;AAACD,EAAA,CApBID,UAAU;AAAAc,EAAA,GAAVd,UAAU;AAsBhB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}